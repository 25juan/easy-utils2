{"version":3,"sources":["index.js"],"names":["countDown","count","callback","timer","Error","isNaN","func","clearInterval","setInterval","fixedZero","str","length","_str","len","Array","fill","join"],"mappings":";AAyCe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhCf,IAAMA,EAAa,SAACC,EAAMC,GAClBC,IAAAA,EAAQ,KACT,IAACF,EACM,MAAA,IAAIG,MAAM,eAGjBC,GAAAA,MAAMJ,GACC,MAAA,IAAIG,MAAM,gBAGdE,IAAAA,EAAO,YACJL,EAAO,GAAKE,GACbI,cAAcJ,GAElBD,GAAUD,GAAOA,EAAO,GACvBA,KAELK,IACAH,EAAQK,YAAYF,EAAK,MAMvBG,EAAY,SAAUC,GAAIC,IAAAA,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACjCC,EAAUF,GAAAA,OAAAA,GACVG,EAAMF,EAAUC,EAAKD,OAIlBC,OAHJC,EAAI,IACHD,EAAOE,MAAMD,GAAKE,KAAK,GAAGC,KAAK,IAAMJ,GAElCA,GAEI,EAAA,CACXZ,UAAAA,EAAUS,UAAAA,GADC,QAAA,QAAA","file":"index.js","sourceRoot":"../src","sourcesContent":["/**\n * 倒计时\n * 使用场景：发送短信码倒计时验证\n * 使用方法：countDown(60,(time,over)=>{\n *     console.log(time);\n * })\n * @param time\n * @param callback\n */\nconst countDown =  (count,callback) =>{\n    let timer = null ;\n    if(!count){\n        throw new Error(\"count参数不能为空\") ;\n        return  ;\n    }\n    if(isNaN(count)){\n        throw new Error(\"count参数不能非数字\") ;\n        return  ;\n    }\n    const func = ()=>{\n        if( +count< 1 && timer){\n            clearInterval(timer);\n        }\n        callback(+count,+count< 1);\n        +count-- ;\n    };\n    func();\n    timer = setInterval(func,1000);\n};\n/**\n *\n * @param length 表示长度不足多少时补0\n */\nconst fixedZero = function (str,length = 2) {\n    let _str = `${str}` ;\n    let len = length  - _str.length ;\n    if(len>0){\n        _str = Array(len).fill(0).join(\"\") + _str ;\n    }\n    return _str ;\n};\nexport default {\n    countDown,fixedZero\n}\n"]}